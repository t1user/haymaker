from _typeshed import Incomplete
from arctic._config import FW_POINTERS_CONFIG_KEY as FW_POINTERS_CONFIG_KEY, FW_POINTERS_REFS_KEY as FW_POINTERS_REFS_KEY, FwPointersCfg as FwPointersCfg
from arctic._util import get_fwptr_config as get_fwptr_config, mongo_count as mongo_count

def _split_arrs(array_2d, slices): ...
def checksum(symbol, doc): ...
def get_symbol_alive_shas(symbol, versions_coll): ...
def _cleanup_fw_pointers(collection, symbol, version_ids, versions_coll, shas_to_delete, do_clean: bool = ...): ...
def _cleanup_parent_pointers(collection, symbol, version_ids) -> None: ...
def _cleanup_mixed(symbol, collection, version_ids, versions_coll) -> None: ...
def _get_symbol_pointer_cfgs(symbol, versions_coll): ...
def cleanup(arctic_lib, symbol, version_ids, versions_coll, shas_to_delete: Incomplete | None = ..., pointers_cfgs: Incomplete | None = ...) -> None: ...
def version_base_or_id(version): ...
def _define_compat_pickle_load(): ...
def analyze_symbol(instance, sym, from_ver, to_ver, do_reads: bool = ...) -> None: ...
def _fast_check_corruption(collection, sym, v, check_count, check_last_segment, check_append_safe): ...
def is_safe_to_append(instance, sym, input_v): ...
def fast_is_corrupted(instance, sym, input_v): ...
def is_corrupted(instance, sym, input_v): ...

pickle_compat_load: Incomplete
