from .._util import indent as indent
from ..decorators import mongo_retry as mongo_retry
from ..exceptions import NoDataFoundException as NoDataFoundException
from .bson_store import BSONStore as BSONStore
from _typeshed import Incomplete

logger: Incomplete
METADATA_STORE_TYPE: str

class MetadataStore(BSONStore):
    @classmethod
    def initialize_library(cls, arctic_lib, hashed: bool = ..., **kwargs) -> None: ...
    def _ensure_index(self) -> None: ...
    _arctic_lib: Incomplete
    def __init__(self, arctic_lib) -> None: ...
    _collection: Incomplete
    def _reset(self) -> None: ...
    def __getstate__(self): ...
    def __setstate__(self, state): ...
    def __str__(self): ...
    def __repr__(self): ...
    def list_symbols(self, regex: Incomplete | None = ..., as_of: Incomplete | None = ..., **kwargs): ...
    def has_symbol(self, symbol): ...
    def read_history(self, symbol): ...
    def read(self, symbol, as_of: Incomplete | None = ...): ...
    def write_history(self, collection) -> None: ...
    def append(self, symbol, metadata, start_time: Incomplete | None = ...): ...
    def prepend(self, symbol, metadata, start_time: Incomplete | None = ...): ...
    def pop(self, symbol): ...
    def purge(self, symbol) -> None: ...
