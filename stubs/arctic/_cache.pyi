from _typeshed import Incomplete

logger: Incomplete
CACHE_COLL: str
CACHE_DB: str
CACHE_SETTINGS: str
CACHE_SETTINGS_KEY: str
DEFAULT_CACHE_EXPIRY: int

class Cache:
    _client: Incomplete
    _cachedb: Incomplete
    _cachecol: Incomplete
    def __init__(self, client, cache_expiry=..., cache_db=..., cache_col=...) -> None: ...
    def _get_cache_settings(self): ...
    def set_caching_state(self, enabled) -> None: ...
    def _is_not_expired(self, cached_data, newer_than_secs): ...
    def get(self, key, newer_than_secs: Incomplete | None = ...): ...
    def set(self, key, data) -> None: ...
    def append(self, key, append_data) -> None: ...
    def delete_item_from_key(self, key, item) -> None: ...
    def update_item_for_key(self, key, old, new) -> None: ...
    def is_caching_enabled(self, cache_enabled_in_env): ...
