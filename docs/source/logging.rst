*******
Logging
*******

All logging is done asyncronously in a separate thread, you don't have to worry about logging operations blocking for too long and itnerfering with other actions.


On top of standard python logging levels, `Haymaker` defines two new levels:
* `DATA` with value 5 - very detailed information, below `DEBUG` level, typically passing actual market data for low level debugging
* `NOTIFY` with value 60 - above `CRITICAL` - tipically used for sending live notifications to the administrator, who is concerned only with strategy performance and not techical aspects of running the framework

Those new levels are not use by the framework itself. They can be used by strategy creators to send information about non-technical aspects of their strategy performance.

Logging configuration can be changed by defining `logging configuration <https://docs.python.org/3/library/logging.config.html#configuration-file-format>`_ in YAML format and pointing the framework to the location of this file by setting `logging_config` config variable (absolute path should be given).

Location of actual logs (if logging to file), can be set by changing value of `logging_path` config variable (this is the folder inside the folder defined by `data_folder` config variable, if the folder doesn't exist, it will be created).


Execution Module
----------------
By default `Haymaker` creates three loggers:
* haymaker - general messages related to the framework
* strategy - logger tracking signals generated by strategies, in default implementation :class:`Brick` logs out all data sent via `dataEvent`
* broker - capture of all :ib_insync.ib:`IB` events with broker messages


Logging config can be changed by coping default config file and overriding it as required. The file is located here:

https://github.com/t1user/haymaker/blob/master/haymaker/logging/logging_config.yaml



Dataloader Module
-----------------

Just one logger is created, that logs to stream and file.

Logging config can be changed by coping default config file and overriding it as required. The file is located here:

https://github.com/t1user/haymaker/blob/master/haymaker/logging/dataloader_logging_config.yaml
  



